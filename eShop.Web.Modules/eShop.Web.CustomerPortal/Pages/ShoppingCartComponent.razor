@page "/cart"

@inject eShop.UseCases.ShoppingCartScreen.Interfaces.IViewShoppingCartUseCase viewShoppingCartUseCase

<h3>Shopping Cart</h3>
<br />

@if(order?.LineItems?.Count > 0)
{
    <div class="row">
        <div class="col-6">
            <ul>
                @for (int i= 0; i < order.LineItems.Count; i++)
                {
                    <LineItemComponent 
                                       LineItem="order.LineItems[i]"
                                       OnDeleteProduct="HandleDeleteProduct"
                                       OnUpdateQuantity="HandleUpdateQuantity">

                    </LineItemComponent>



                    @if (i < order.LineItems.Count - 1)
                        {
                            <li style="list-style:none">
                                <hr />
                            </li>
                        }
                }
            </ul>
        </div>
        <div class="col">
            <OrderSummaryComponent Order="order"></OrderSummaryComponent>

        </div>

    </div>
}

@code {
    private Order order;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            order = await viewShoppingCartUseCase.Execute();
            StateHasChanged();
        }
    }

    private void HandleDeleteProduct(Order inputOrder)
    {
        order = inputOrder;
    }

    private void HandleUpdateQuantity(Order inputOrder)
    {
        order = inputOrder;
    }
}
